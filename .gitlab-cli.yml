# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

stages: # List of stages for jobs, and their order of execution
  - build
  - analyze
  - deploy

variables:
  PLUGIN_LIGHT_PRE: "zpass-light"
  PLUGIN_LIGHT_ZIP: "$PLUGIN_LIGHT_PRE-$VERSTION_PREFIX.$CI_PIPELINE_IID.zip"
  PLUGIN_LIGHT_LATEST: "$PLUGIN_LIGHT_PRE-latest.zip"
  SOURCE_FOLDER: "dist"
  LIGHT_PASSWORD_MANIFEST: "$SOURCE_FOLDER/manifest.json"
  VERSTION_PREFIX: "1.4"
  UPDATE_VERSION_CMD: 'jq ''.version = "$VERSTION_PREFIX.$CI_PIPELINE_IID"'' manifest.json|sponge manifest.json'

build-job: # This job runs in the build stage, which runs first.
  stage: build
  script:
    - echo "Compiling the code..."
    - yarn
    - npm run build
    - echo "Compile complete."

analyze-job:
  stage: analyze
  only:
    - dev
    - master
    - /^release.*$/
  script:
    - sonar-scanner -Dsonar.projectKey=$CI_PROJECT_NAME:$CI_COMMIT_REF_NAME -Dsonar.projectName=$CI_PROJECT_NAME:$CI_COMMIT_REF_NAME

deploy-light-test: # This job runs in the deploy stage.
  stage: deploy # It only runs when *both* jobs in the test stage complete successfully.
  only:
    - dev
    - master
    - /^release.*$/
    - /^feature.*$/
    - /^pre-release.*$/
  script:
    - yarn
    - npm run build
    - cd $SOURCE_FOLDER
    - eval "$UPDATE_VERSION_CMD"
    - zip -r ../$PLUGIN_LIGHT_ZIP *
    - cp $PLUGIN_LIGHT_ZIP $PLUGIN_LIGHT_LATEST
    - AWS_ACCESS_KEY_ID=$DEV_AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY=$DEV_AWS_SECRET_ACCESS_KEY aws s3 cp ./ s3://plugin-light-test-$DEV_AWS_DEFAULT_REGION --recursive --exclude "*" --include "$PLUGIN_LIGHT_PRE*.zip" --acl public-read
  environment:
    name: testing
    url: https://testing.example.com
  when: manual
